{
	// Place your quality-report-web workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	"Story ts index template": {
		"scope": "typescriptreact",
		"prefix": "story-index-component",
		"body": [
			"import type { Meta, StoryObj } from '@storybook/react';",
			"import $0 from '.';",
			"",
			"const meta: Meta<typeof $0> = {",
			"    title: 'Components/$0',",
			"    component: $0,",
			"    decorators: [],",
			"    args: {},",
			"    argTypes: {}",
			"};",
			"",
			"export default meta;",
			"",
			"type Story = StoryObj<typeof $0>;",
			"",
			"export const Primary: Story = {",
			"    render: (args) => <$0></$0>",
			"};",
		],
		"description": "generate component story template"
	},
	"Story ts template": {
		"scope": "typescriptreact",
		"prefix": "story-component",
		"body": [
			"import type { Meta, StoryObj } from '@storybook/react';",
			"import $2 from '$1';",
			"",
			"const meta: Meta<typeof $0> = {",
			"    title: 'Components/$0',",
			"    component: $0,",
			"    decorators: [],",
			"    args: {},",
			"    argTypes: {}",
			"};",
			"",
			"export default meta;",
			"",
			"type Story = StoryObj<typeof $0>;",
			"",
			"export const Primary: Story = {",
			"    render: (args) => <$0></$0>",
			"};",
		],
		"description": "generate component story template"
	},
}